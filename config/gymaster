CREATE DATABASE IF NOT EXISTS GYMASTER;

USE GYMASTER;

CREATE TABLE `USER` 
( 
	USER_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	USER_FNAME VARCHAR(50) NOT NULL,
	USER_LNAME VARCHAR(30) NOT NULL,
	USERNAME VARCHAR(20) UNIQUE NOT NULL,
	`PASSWORD` VARCHAR(15) NOT NULL,
	USER_TYPE ENUM('ADMINISTRATOR', 'STAFF') NOT NULL,
	IS_ACTIVE TINYINT(1) DEFAULT 1 NOT NULL,
);

CREATE INDEX IDX_USER ON `USER` (USER_FNAME, USER_LNAME);

CREATE TABLE PROGRAM 
( 
	PROGRAM_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	PROGRAM_NAME VARCHAR(50) NOT NULL,
	IS_ACTIVE TINYINT(1) DEFAULT 1 NOT NULL
);

CREATE TABLE `MEMBER`
( 
	MEMBER_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	MEMBER_FNAME VARCHAR(50) NOT NULL,
	MEMBER_LNAME VARCHAR(30) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	PHONE_NUMBER VARCHAR(15) NOT NULL,
	IS_ACTIVE TINYINT(1) DEFAULT 1 NOT NULL,
	PROGRAM_ID SMALLINT NOT NULL,
	USER_ID SMALLINT NOT NULL,
	FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM(PROGRAM_ID),
	FOREIGN KEY (USER_ID) REFERENCES `USER`(USER_ID)
);

CREATE INDEX IDX_MEM ON `MEMBER` (MEMBER_FNAME, MEMBER_LNAME);

CREATE TABLE SUBSCRIPTION 
( 
	SUB_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	SUB_NAME VARCHAR(20) NOT NULL,
	DURATION VARCHAR(10) NOT NULL,
	PRICE DECIMAL(10,2) NOT NULL,
	IS_ACTIVE TINYINT(1) DEFAULT 1 NOT NULL
); 

CREATE TABLE MEMBER_SUBSCRIPTION 
( 
    MEMBER_ID SMALLINT NOT NULL,
    SUB_ID SMALLINT NOT NULL,
    START_DATE DATE DEFAULT CURRENT_DATE() NOT NULL,
    END_DATE DATE NOT NULL,
    IS_ACTIVE TINYINT(1) DEFAULT 1 NOT NULL,
    PRIMARY KEY (MEMBER_ID, SUB_ID, START_DATE, END_DATE),
    FOREIGN KEY (MEMBER_ID) REFERENCES `MEMBER`(MEMBER_ID),
    FOREIGN KEY (SUB_ID) REFERENCES SUBSCRIPTION(SUB_ID)
);

CREATE TABLE COMORBIDITIES
(
	COMOR_ID SMALLINT AUTO_INCREMENT PRIMARY KEY NOT NULL,
	COMOR_NAME VARCHAR(50) NOT NULL,
	COMOR_DESC VARCHAR(100) NOT NULL
);

CREATE TABLE MEMBER_COMORBIDITIES
(
	MEMBER_ID SMALLINT,
	COMOR_ID SMALLINT,
	PRIMARY KEY (MEMBER_ID, COMOR_ID),
	FOREIGN KEY (MEMBER_ID) REFERENCES `MEMBER`(MEMBER_ID),
	FOREIGN KEY (COMOR_ID) REFERENCES COMORBIDITIES (COMOR_ID)
);

CREATE TABLE COACH 
( 
	COACH_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	COACH_FNAME VARCHAR(50) NOT NULL,
	COACH_LNAME VARCHAR(30) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	PHONE_NUMBER VARCHAR(15) NOT NULL,
	GENDER ENUM('MALE', 'FEMALE', 'OTHER') NOT NULL,
	SPECIALIZATION VARCHAR(550) NOT NULL,
	IS_ACTIVE TINYINT(1) DEFAULT 1 NOT NULL
);

CREATE INDEX IDX_COACH ON COACH(COACH_FNAME, COACH_LNAME);

CREATE TABLE PROGRAM_COACH
( 
	PROGRAM_ID SMALLINT NOT NULL,
	COACH_ID SMALLINT NOT NULL,
	PRIMARY KEY (PROGRAM_ID, COACH_ID),
	FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAM(PROGRAM_ID),
	FOREIGN KEY (COACH_ID) REFERENCES COACH(COACH_ID) 
); 

CREATE TABLE PAYMENT 
( 
	PAYMENT_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	PAY_METHOD VARCHAR(20) NOT NULL
); 

CREATE TABLE `TRANSACTION` 
( 
	TRANSACTION_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	MEMBER_ID SMALLINT NOT NULL,
	SUB_ID SMALLINT NOT NULL,
	PAYMENT_ID SMALLINT NOT NULL,
	TRANSAC_DATE DATE DEFAULT CURRENT_DATE() NOT NULL,
	FOREIGN KEY (MEMBER_ID) REFERENCES `MEMBER`(MEMBER_ID),
	FOREIGN KEY (SUB_ID) REFERENCES SUBSCRIPTION(SUB_ID),
	FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID)
);

CREATE TABLE TRANSACTION_LOG
(
	LOG_ID SMALLINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	TRANSACTION_ID INT NOT NULL,
	OPERATION VARCHAR(15) NOT NULL,
	MODIFIEDDATE DATE DEFAULT CURRENT_DATE() NOT NULL
);